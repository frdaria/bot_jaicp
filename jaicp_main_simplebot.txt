require: slotfilling/slotFilling.sc
  module = sys.zb-common
  
  
require: patterns.sc

init:
    bind("postProcess", function($context) {
        //log("/// my log: " + toPrettyString($context));
        $context.session.lastState = $context.currentState;
    });
    
theme: /

    # state: Start
    #     q!: $regex</start>
    #     a: –ù–∞—á–Ω—ë–º.
        
    state: Start
        q!: $regex</start>
        a: –Ø —Å–ø–∞–Ω—á-–±–æ–±! (–Ω–∞–ø—Ä–∞–≤–ª—è—é –≤ askname)
        a: –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?
        
        script:
            $session.counter = 0;
        # go!: /AskName
        # go!: /Resistance1
        #go!: /emailUser
        event!: noMatch || toState = "./CatchAll"
        
    state: AskName || modal = true
        q!: * @pymorphy.name *
        script:
            $session.userName = $parseTree["_pymorphy.name"];
            var answer = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, " + $session.userName + "! –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É!";
            $reactions.answer(answer);
        go!: /AskProblem
        
    state: AskProblem
        q: *—á—Ç–æ (—Ö–æ—Ç–µ–ª–∏|–Ω—É–∂–Ω–æ|–Ω–∞–¥–æ)* 
        a: –í—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫! –ó–∞–ø–∏—à–µ–º—Å—è —Å–µ–π—á–∞—Å?
        # go!: /Resistance1
        

    state: HandleResistance
        q!: ( $no_time | $know_all | $no_need | $no_time1 | $no_comp | $rejection )
        go!: /HandleResistance/NoTime
        
        state: NoTime
            q: $no_time
            script:
                $session.counter++;
                if ($session.counter === 5) {$reactions.transition("/Bye");}
            script:
                var replies = [
                "–≠—Ç–æ –Ω–µ –∑–∞–π–º–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ üôÇ",
                "–ó–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–∏–Ω—É—Ç!",
                "–°–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å –≤—Ä–µ–º–µ–Ω–∏, –æ–±–µ—â–∞—é!"];
                var reply = replies[Math.floor(Math.random() * replies.length)];
                $reactions.answer(reply);
        
        state:KnowAll
            q: $know_all
            script:
                $session.counter++;
                if ($session.counter === 5) {$reactions.transition("/Bye");}
            script:
                $reactions.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ, –Ω–æ –¥–∞–≤–∞–π—Ç–µ –∑–∞–ø–∏—à–µ–º—Å—è :) –ö–∞–∫–æ–π —É –≤–∞—Å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?")
        
        state:NoNeed
            q: $no_need
            script:
                $session.counter++;
                if ($session.counter === 5) {$reactions.transition("/Bye");}
            script:
                $reactions.answer("–ñ–∏–∑–Ω—å –æ–¥–Ω–∞! –ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –ø–æ—Ç–æ–º —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å!")

        state:NoComp
            q!: $no_comp
            script:
                $session.counter++;
                if ($session.counter === 5) {$reactions.transition("/Bye");}
            script:
                $reactions.answer("–ü—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤—Å–µ–≥–¥–∞ –ø–æ–ª–µ–∑–Ω–æ!")
 

    state: Bye
        q: * (–ø–æ–∫–∞|–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è|–≤—ã—Ö–æ–¥) *
        random:
            a: –º—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –±—É–¥–µ–º –≤–∞—Å –∂–¥–∞—Ç—å!
            a: –¥–æ –≤—Å—Ç—Ä–µ—á–∏!
        
        

    state: Hello
        intent!: /–ø—Ä–∏–≤–µ—Ç
        a: –ü—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç


    state: NoMatch
        event!: noMatch
        a: –Ø –Ω–µ –ø–æ–Ω—è–ª. –í—ã —Å–∫–∞–∑–∞–ª–∏: {{$request.query}}

    state: Match
        event!: match
        a: {{$context.intent.answer}}
        

